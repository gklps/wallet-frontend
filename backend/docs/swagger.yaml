definitions:
  main.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  main.LoginCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.TokenResponse:
    properties:
      token:
        type: string
    type: object
  main.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/main.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Login user and get JWT token
      tags:
      - Auth
  /profile:
    get:
      consumes:
      - application/json
      description: Fetch user information from the database using the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile by ID
      tags:
      - User
swagger: "2.0"
